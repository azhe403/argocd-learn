name: Build and publish Docker image

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  # ...existing code...

  build-golang:
    if: github.event_name == 'push' && (github.event.head_commit.modified && contains(join(github.event.head_commit.modified, ','), 'argocd-apps/golang-svc/'))
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/golang-argocd
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: ./argocd-apps/golang-svc
        file: ./argocd-apps/golang-svc/Dockerfile
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.IMAGE_NAME }}:latest

    - name: Print pushed image
      run: |
        echo "Pushed images:"
        echo "${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "${{ env.IMAGE_NAME }}:latest"

  nodejs-build:
    if: github.event_name == 'push' && (github.event.head_commit.modified && contains(join(github.event.head_commit.modified, ','), 'argocd-apps/nodejs-svc/'))
    name: Build and Push nodejs-svc Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    defaults:
      run:
        working-directory: argocd-apps/nodejs-svc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: argocd-apps/nodejs-svc/node_modules
          key: ${{ runner.os }}-nodejs-${{ hashFiles('argocd-apps/nodejs-svc/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nodejs-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./argocd-apps/nodejs-svc
          file: ./argocd-apps/nodejs-svc/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/nodejs-svc:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/nodejs-svc:latest

      - name: Print pushed image
        run: |
          echo "Pushed images:"
          echo "ghcr.io/${{ github.repository_owner }}/nodejs-svc:${{ github.sha }}"
          echo "ghcr.io/${{ github.repository_owner }}/nodejs-svc:latest"
